{"ast":null,"code":"var _jsxFileName = \"/Users/yusuf/scheduler/src/components/Appointment/index.js\";\nimport React, { Fragment } from \"react\";\nimport useVisualMode from \"../../hooks/useVisualMode\";\nimport \"./styles.scss\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nexport default function Appointment(props) {\n  let interview = {};\n\n  if (props.interview) {\n    interview = {\n      student: props.interview.student,\n      interviewer: props.interview.interviewer\n    };\n    console.log(\"INTERVIEW OBJECT: \", interview);\n  }\n\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  console.log(\"INTERVIEW OBJECT\", interview);\n\n  const _useVisualMode = useVisualMode(props.interview ? SHOW : EMPTY),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back;\n\n  if (props.interview) console.log(\"INTERVIEW: \", props.interview);\n  console.log(interview.interviewer);\n\n  const onAdd = () => {\n    transition(CREATE);\n  };\n\n  const onCancel = () => {\n    back();\n  };\n\n  const save = (name, interviewer) => {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    props.bookInterview(props.id, interview);\n    transition(SHOW);\n  };\n\n  return React.createElement(\"article\", {\n    className: \"appointment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Header, {\n    time: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), mode === EMPTY && React.createElement(Empty, {\n    onAdd: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), mode === SHOW && React.createElement(Show, {\n    student: props.interview.student,\n    interviewer: props.interview.interviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), mode === CREATE && React.createElement(Form, {\n    interviewers: props.interviewers,\n    onCancel: onCancel,\n    onSave: save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Appointment/index.js"],"names":["React","Fragment","useVisualMode","Header","Show","Empty","Form","Appointment","props","interview","student","interviewer","console","log","EMPTY","SHOW","CREATE","mode","transition","back","onAdd","onCancel","save","name","bookInterview","id","time","interviewers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEzC,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAID,KAAK,CAACC,SAAV,EAAqB;AACnBA,IAAAA,SAAS,GAAG;AAAEC,MAAAA,OAAO,EAAEF,KAAK,CAACC,SAAN,CAAgBC,OAA3B;AAAoCC,MAAAA,WAAW,EAAEH,KAAK,CAACC,SAAN,CAAgBE;AAAjE,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,SAAlC;AACD;;AACD,QAAMK,KAAK,GAAG,OAAd;AACA,QAAMC,IAAI,GAAG,MAAb;AACA,QAAMC,MAAM,GAAG,QAAf;AAEAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAiCJ,SAAjC;;AAXyC,yBAaNP,aAAa,CAC9CM,KAAK,CAACC,SAAN,GAAkBM,IAAlB,GAAyBD,KADqB,CAbP;AAAA,QAajCG,IAbiC,kBAajCA,IAbiC;AAAA,QAa3BC,UAb2B,kBAa3BA,UAb2B;AAAA,QAafC,IAbe,kBAafA,IAbe;;AAgB3C,MAAIX,KAAK,CAACC,SAAV,EAAqBG,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,KAAK,CAACC,SAAjC;AACrBG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAS,CAACE,WAAtB;;AACE,QAAMS,KAAK,GAAG,MAAM;AAClBF,IAAAA,UAAU,CAACF,MAAD,CAAV;AACD,GAFD;;AAGA,QAAMK,QAAQ,GAAG,MAAM;AACrBF,IAAAA,IAAI;AACL,GAFD;;AAIA,QAAMG,IAAI,GAAG,CAACC,IAAD,EAAOZ,WAAP,KAAuB;AAClC,UAAMF,SAAS,GAAG;AAChBC,MAAAA,OAAO,EAAEa,IADO;AAEhBZ,MAAAA;AAFgB,KAAlB;AAIAH,IAAAA,KAAK,CAACgB,aAAN,CAAoBhB,KAAK,CAACiB,EAA1B,EAA8BhB,SAA9B;AACAS,IAAAA,UAAU,CAACH,IAAD,CAAV;AACD,GAPD;;AASA,SACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEP,KAAK,CAACkB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGT,IAAI,KAAKH,KAAT,IAAkB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEM,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,EAGGH,IAAI,KAAKF,IAAT,IACC,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEP,KAAK,CAACC,SAAN,CAAgBC,OAD3B;AAEE,IAAA,WAAW,EAAEF,KAAK,CAACC,SAAN,CAAgBE,WAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EASGM,IAAI,KAAKD,MAAT,IACC,oBAAC,IAAD;AACE,IAAA,YAAY,EAAER,KAAK,CAACmB,YADtB;AAEE,IAAA,QAAQ,EAAIN,QAFd;AAGE,IAAA,MAAM,EAAIC,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADF;AA6BD","sourcesContent":["import React, { Fragment } from \"react\";\nimport useVisualMode from \"../../hooks/useVisualMode\";\nimport \"./styles.scss\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\"\n\nexport default function Appointment(props) {\n \n  let interview = {};\n  if (props.interview) {\n    interview = { student: props.interview.student, interviewer: props.interview.interviewer };\n    console.log(\"INTERVIEW OBJECT: \", interview)\n  }\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  \n  console.log(\"INTERVIEW OBJECT\" , interview)\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\nif (props.interview) console.log(\"INTERVIEW: \", props.interview)\nconsole.log(interview.interviewer)\n  const onAdd = () => {\n    transition(CREATE);\n  }\n  const onCancel = () => {\n    back();\n  }\n\n  const save = (name, interviewer) => {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    props.bookInterview(props.id, interview);\n    transition(SHOW);\n  }\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time} />\n      {mode === EMPTY && <Empty onAdd={onAdd} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      )}\n      {mode === CREATE && (\n        <Form\n          interviewers={props.interviewers}\n          onCancel = {onCancel}\n          onSave = {save}\n         \n        />\n      )}\n\n      {/* {props.interview ? (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      ) : (\n        <Empty />\n      )} */}\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}