{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Application.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nconst appointments = [{\n  id: 1,\n  time: \"12pm\"\n}, {\n  id: 2,\n  time: \"1pm\",\n  interview: {\n    student: \"Lydia Miller-Jones\",\n    interviewer: {\n      id: 1,\n      name: \"Sylvia Palmer\",\n      avatar: \"https://i.imgur.com/LpaY82x.png\"\n    }\n  }\n}, {\n  id: 3,\n  time: \"2pm\",\n  interview: {\n    student: \"Lydia Miller-Jones\",\n    interviewer: {\n      id: 1,\n      name: \"Sylvia Palmer\",\n      avatar: \"https://i.imgur.com/LpaY82x.png\"\n    }\n  }\n}, {\n  id: 4,\n  time: \"3pm\",\n  interview: {\n    student: \"Lydia Miller-Jones\",\n    interviewer: {\n      id: 1,\n      name: \"Sylvia Palmer\",\n      avatar: \"https://i.imgur.com/LpaY82x.png\"\n    }\n  }\n}, {\n  id: 5,\n  time: \"4pm\",\n  interview: {\n    student: \"Lydia Miller-Jones\",\n    interviewer: {\n      id: 1,\n      name: \"Sylvia Palmer\",\n      avatar: \"https://i.imgur.com/LpaY82x.png\"\n    }\n  }\n}];\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  }));\n\n  const setDays = days => setState(prev => _objectSpread({}, prev, {\n    days\n  }));\n\n  useEffect(() => {\n    const testURL = \"http://localhost:8001/api/days\";\n    axios.get(testURL).then(response => {\n      setDays([...response.data]);\n    });\n  }, []);\n  console.log(state);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    days: state.days,\n    day: state.day,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, appointments.map(appointment => React.createElement(Appointment, Object.assign({\n    key: appointment.id\n  }, appointment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Application.js"],"names":["React","useEffect","axios","useState","DayList","Appointment","appointments","id","time","interview","student","interviewer","name","avatar","Application","props","day","days","state","setState","setDay","setDays","prev","testURL","get","then","response","data","console","log","map","appointment"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\n\nconst appointments = [\n  {\n    id: 1,\n    time: \"12pm\",\n  },\n  {\n    id: 2,\n    time: \"1pm\",\n    interview: {\n      student: \"Lydia Miller-Jones\",\n      interviewer: {\n        id: 1,\n        name: \"Sylvia Palmer\",\n        avatar: \"https://i.imgur.com/LpaY82x.png\",\n      },\n    },\n  },\n  {\n    id: 3,\n    time: \"2pm\",\n    interview: {\n      student: \"Lydia Miller-Jones\",\n      interviewer: {\n        id: 1,\n        name: \"Sylvia Palmer\",\n        avatar: \"https://i.imgur.com/LpaY82x.png\",\n      },\n    },\n  },\n\n  {\n    id: 4,\n    time: \"3pm\",\n    interview: {\n      student: \"Lydia Miller-Jones\",\n      interviewer: {\n        id: 1,\n        name: \"Sylvia Palmer\",\n        avatar: \"https://i.imgur.com/LpaY82x.png\",\n      },\n    },\n  },\n  {\n    id: 5,\n    time: \"4pm\",\n    interview: {\n      student: \"Lydia Miller-Jones\",\n      interviewer: {\n        id: 1,\n        name: \"Sylvia Palmer\",\n        avatar: \"https://i.imgur.com/LpaY82x.png\",\n      },\n    },\n  },\n];\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {}\n  });\n\n  const setDay = (day) => setState({ ...state, day });\n  const setDays = (days) => setState((prev) => ({ ...prev, days }));\n\n  useEffect(() => {\n    const testURL = `http://localhost:8001/api/days`;\n    axios.get(testURL).then((response) => {\n      setDays([...response.data]);\n    });\n  }, []);\nconsole.log(state);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {appointments.map((appointment) => (\n          <Appointment key={appointment.id} {...appointment} />\n        ))}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}