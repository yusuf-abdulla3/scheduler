{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Application.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"../helpers/selectors\";\nimport useVisualMode from \"hooks/useVisualMode\";\nexport default function Application(props) {\n  const _useVisualMode = useVisualMode(),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back;\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const interviewers = getInterviewersForDay(state, state.day);\n  console.log(\"DAILY APPOINTMENTS: \", dailyAppointments);\n  const schedule = dailyAppointments.map(appointment => {\n    const interview = getInterview(state, appointment.interview);\n    return React.createElement(Appointment, {\n      key: appointment.id,\n      id: appointment.id,\n      time: appointment.time,\n      interview: interview,\n      interviewers: interviewers,\n      bookInterview: bookInterview,\n      cancelInterview: cancelInterview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n  });\n  useEffect(() => {\n    const daysURL = \"/api/days\";\n    const appointmentsURL = \"/api/appointments\";\n    const interviewersURL = \"/api/interviewers\";\n    Promise.all([axios.get(daysURL), axios.get(appointmentsURL), axios.get(interviewersURL)]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    }).catch(error => console.log(\"ERROR: \", error));\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    days: state.days,\n    day: state.day,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, schedule, React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Application.js"],"names":["React","useEffect","axios","useState","DayList","Appointment","getAppointmentsForDay","getInterview","getInterviewersForDay","useVisualMode","Application","props","mode","transition","back","dailyAppointments","state","day","interviewers","console","log","schedule","map","appointment","interview","id","time","bookInterview","cancelInterview","daysURL","appointmentsURL","interviewersURL","Promise","all","get","then","setState","prev","days","data","appointments","catch","error","setDay"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport {\n  getAppointmentsForDay,\n  getInterview,\n  getInterviewersForDay,\n} from \"../helpers/selectors\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nexport default function Application(props) {\n\n  const { mode, transition, back } = useVisualMode();\n\n \n  \n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const interviewers = getInterviewersForDay(state, state.day);\n  console.log(\"DAILY APPOINTMENTS: \", dailyAppointments);\n  const schedule = dailyAppointments.map((appointment) => {\n    const interview = getInterview(state, appointment.interview);\n\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={interview}\n        interviewers={interviewers}\n        bookInterview={bookInterview}\n        cancelInterview={cancelInterview}\n      />\n    );\n  });\n\n  useEffect(() => {\n    const daysURL = `/api/days`;\n    const appointmentsURL = `/api/appointments`;\n    const interviewersURL = `/api/interviewers`;\n\n    Promise.all([\n      axios.get(daysURL),\n      axios.get(appointmentsURL),\n      axios.get(interviewersURL),\n    ])\n      .then((all) => {\n        setState((prev) => ({\n          ...prev,\n          days: all[0].data,\n          appointments: all[1].data,\n          interviewers: all[2].data,\n        }));\n      })\n      .catch((error) => console.log(\"ERROR: \", error));\n  }, []);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {schedule}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}