{"ast":null,"code":"var _jsxFileName = \"/Users/yusuf/scheduler/src/components/Appointment/index.js\";\nimport React, { Fragment } from \"react\";\nimport useVisualMode from \"../../hooks/useVisualMode\";\nimport \"./styles.scss\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\nexport default function Appointment(props) {\n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n\n  const _useVisualMode = useVisualMode(props.interview ? SHOW : EMPTY),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back;\n\n  console.log(\"PROPS: \", props);\n\n  const onAdd = () => {\n    transition(CREATE);\n  };\n\n  const onCancel = () => {\n    back();\n  };\n\n  const save = (name, interviewer) => {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    transition(SAVING);\n    Promise.resolve(props.bookInterview(props.id, interview)).then(() => transition(SHOW));\n  };\n\n  return React.createElement(\"article\", {\n    className: \"appointment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Header, {\n    time: props.time,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), mode === EMPTY && React.createElement(Empty, {\n    onAdd: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), mode === SHOW && React.createElement(Show, {\n    student: props.interview.student,\n    interviewer: props.interview.interviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), mode === CREATE && React.createElement(Form, {\n    interviewers: props.interviewers,\n    onCancel: onCancel,\n    onSave: save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), mode === SAVING && React.createElement(Status, {\n    message: \"Saving\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Appointment/index.js"],"names":["React","Fragment","useVisualMode","Header","Show","Empty","Form","Status","Confirm","Appointment","props","EMPTY","SHOW","CREATE","SAVING","interview","mode","transition","back","console","log","onAdd","onCancel","save","name","interviewer","student","Promise","resolve","bookInterview","id","then","time","interviewers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAO,eAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEzC,QAAMC,KAAK,GAAG,OAAd;AACA,QAAMC,IAAI,GAAG,MAAb;AACA,QAAMC,MAAM,GAAG,QAAf;AACA,QAAMC,MAAM,GAAG,QAAf;;AALyC,yBAONZ,aAAa,CAC9CQ,KAAK,CAACK,SAAN,GAAkBH,IAAlB,GAAyBD,KADqB,CAPP;AAAA,QAOjCK,IAPiC,kBAOjCA,IAPiC;AAAA,QAO3BC,UAP2B,kBAO3BA,UAP2B;AAAA,QAOfC,IAPe,kBAOfA,IAPe;;AAWzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,KAAvB;;AACA,QAAMW,KAAK,GAAG,MAAM;AAClBJ,IAAAA,UAAU,CAACJ,MAAD,CAAV;AACD,GAFD;;AAGA,QAAMS,QAAQ,GAAG,MAAM;AACrBJ,IAAAA,IAAI;AACL,GAFD;;AAIA,QAAMK,IAAI,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB;AAClC,UAAMV,SAAS,GAAG;AAChBW,MAAAA,OAAO,EAAEF,IADO;AAEhBC,MAAAA;AAFgB,KAAlB;AAIAR,IAAAA,UAAU,CAACH,MAAD,CAAV;AACAa,IAAAA,OAAO,CAACC,OAAR,CAAgBlB,KAAK,CAACmB,aAAN,CAAoBnB,KAAK,CAACoB,EAA1B,EAA8Bf,SAA9B,CAAhB,EACCgB,IADD,CACM,MAAMd,UAAU,CAACL,IAAD,CADtB;AAED,GARD;;AAWA,SACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEF,KAAK,CAACsB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGhB,IAAI,KAAKL,KAAT,IAAkB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEU,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFrB,EAGGL,IAAI,KAAKJ,IAAT,IACC,oBAAC,IAAD;AACE,IAAA,OAAO,EAAEF,KAAK,CAACK,SAAN,CAAgBW,OAD3B;AAEE,IAAA,WAAW,EAAEhB,KAAK,CAACK,SAAN,CAAgBU,WAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAUGT,IAAI,KAAKH,MAAT,IACC,oBAAC,IAAD;AACE,IAAA,YAAY,EAAEH,KAAK,CAACuB,YADtB;AAEE,IAAA,QAAQ,EAAIX,QAFd;AAGE,IAAA,MAAM,EAAIC,IAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAmBIP,IAAI,KAAKF,MAAT,IACA,oBAAE,MAAF;AACE,IAAA,OAAO,EAAG,QADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADF;AAoCD","sourcesContent":["import React, { Fragment } from \"react\";\nimport useVisualMode from \"../../hooks/useVisualMode\";\nimport \"./styles.scss\";\nimport Header from \"./Header\";\nimport Show from \"./Show\";\nimport Empty from \"./Empty\";\nimport Form from \"./Form\";\nimport Status from \"./Status\";\nimport Confirm from \"./Confirm\";\n\nexport default function Appointment(props) {\n  \n  const EMPTY = \"EMPTY\";\n  const SHOW = \"SHOW\";\n  const CREATE = \"CREATE\";\n  const SAVING = \"SAVING\";\n\n  const { mode, transition, back } = useVisualMode(\n    props.interview ? SHOW : EMPTY\n  );\n\n  console.log(\"PROPS: \", props);\n  const onAdd = () => {\n    transition(CREATE);\n  }\n  const onCancel = () => {\n    back();\n  }\n\n  const save = (name, interviewer) => {\n    const interview = {\n      student: name,\n      interviewer\n    };\n    transition(SAVING);\n    Promise.resolve(props.bookInterview(props.id, interview))\n    .then(() => transition(SHOW))\n  }\n\n\n  return (\n    <article className=\"appointment\">\n      <Header time={props.time} />\n      {mode === EMPTY && <Empty onAdd={onAdd} />}\n      {mode === SHOW && (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n          \n        />\n      )}\n      {mode === CREATE && (\n        <Form\n          interviewers={props.interviewers}\n          onCancel = {onCancel}\n          onSave = {save}\n         \n        />\n      )}\n\n      { mode === SAVING && (\n        < Status \n          message = \"Saving\" \n        />\n      )}\n\n      {/* {props.interview ? (\n        <Show\n          student={props.interview.student}\n          interviewer={props.interview.interviewer}\n        />\n      ) : (\n        <Empty />\n      )} */}\n    </article>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}