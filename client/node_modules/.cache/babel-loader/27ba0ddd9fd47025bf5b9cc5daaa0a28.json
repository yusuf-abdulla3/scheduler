{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nexport const getAppointmentsForDay = (state, day) => {\n  const filteredAppointments = [];\n  state.days.forEach(stateDay => {\n    if (stateDay.name === day) {\n      stateDay.appointments.forEach(appointmentId => {\n        filteredAppointments.push(state.appointments[appointmentId]);\n      });\n    }\n  });\n  return filteredAppointments;\n};\nexport const getInterviewersForDay = (state, day) => {\n  const filteredAppointments = [];\n  state.days.forEach(stateDay => {\n    if (stateDay.name === day) {\n      stateDay.interviewers.forEach(interviewerId => {\n        filteredinterviewers.push(state.interviewers[interviewerId]);\n      });\n    }\n  });\n  return filteredAppointments;\n};\nexport const getInterview = (state, interview) => {\n  if (interview) {\n    const interviewId = interview.interviewer;\n    const interviewer = state.interviewers[interviewId];\n    return _objectSpread({}, interview, {\n      interviewer\n    });\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/helpers/selectors.js"],"names":["getAppointmentsForDay","state","day","filteredAppointments","days","forEach","stateDay","name","appointments","appointmentId","push","getInterviewersForDay","interviewers","interviewerId","filteredinterviewers","getInterview","interview","interviewId","interviewer"],"mappings":";AAAA,OAAO,MAAMA,qBAAqB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnD,QAAMC,oBAAoB,GAAG,EAA7B;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBC,QAAQ,IAAI;AAC7B,QAAIA,QAAQ,CAACC,IAAT,KAAkBL,GAAtB,EAA2B;AACzBI,MAAAA,QAAQ,CAACE,YAAT,CAAsBH,OAAtB,CAA8BI,aAAa,IAAI;AAC7CN,QAAAA,oBAAoB,CAACO,IAArB,CAA0BT,KAAK,CAACO,YAAN,CAAmBC,aAAnB,CAA1B;AACD,OAFD;AAGD;AACF,GAND;AAOA,SAAON,oBAAP;AACD,CAVM;AAYP,OAAO,MAAMQ,qBAAqB,GAAG,CAACV,KAAD,EAAQC,GAAR,KAAgB;AACnD,QAAMC,oBAAoB,GAAG,EAA7B;AACAF,EAAAA,KAAK,CAACG,IAAN,CAAWC,OAAX,CAAmBC,QAAQ,IAAI;AAC7B,QAAIA,QAAQ,CAACC,IAAT,KAAkBL,GAAtB,EAA2B;AACzBI,MAAAA,QAAQ,CAACM,YAAT,CAAsBP,OAAtB,CAA8BQ,aAAa,IAAI;AAC7CC,QAAAA,oBAAoB,CAACJ,IAArB,CAA0BT,KAAK,CAACW,YAAN,CAAmBC,aAAnB,CAA1B;AACD,OAFD;AAGD;AACF,GAND;AAOA,SAAOV,oBAAP;AACD,CAVM;AAYP,OAAO,MAAMY,YAAY,GAAG,CAACd,KAAD,EAAQe,SAAR,KAAsB;AAChD,MAAIA,SAAJ,EAAe;AACb,UAAMC,WAAW,GAAGD,SAAS,CAACE,WAA9B;AACA,UAAMA,WAAW,GAAGjB,KAAK,CAACW,YAAN,CAAmBK,WAAnB,CAApB;AACA,6BAAYD,SAAZ;AAAuBE,MAAAA;AAAvB;AACD;;AACD,SAAO,IAAP;AACD,CAPM","sourcesContent":["export const getAppointmentsForDay = (state, day) => {\n  const filteredAppointments = []\n  state.days.forEach(stateDay => {\n    if (stateDay.name === day) {\n      stateDay.appointments.forEach(appointmentId => {\n        filteredAppointments.push(state.appointments[appointmentId])\n      })\n    }\n  })\n  return filteredAppointments;\n}\n\nexport const getInterviewersForDay = (state, day) => {\n  const filteredAppointments = []\n  state.days.forEach(stateDay => {\n    if (stateDay.name === day) {\n      stateDay.interviewers.forEach(interviewerId => {\n        filteredinterviewers.push(state.interviewers[interviewerId])\n      })\n    }\n  })\n  return filteredAppointments;\n}\n\nexport const getInterview = (state, interview) => {\n  if (interview) {\n    const interviewId = interview.interviewer;\n    const interviewer = state.interviewers[interviewId];\n    return { ...interview, interviewer };\n  }\n  return null;\n};"]},"metadata":{},"sourceType":"module"}