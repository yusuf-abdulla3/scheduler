{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Application.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay, getInterview, getInterviewersForDay } from \"../helpers/selectors\";\nimport useVisualMode from \"hooks/useVisualMode\";\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useVisualMode = useVisualMode(),\n        mode = _useVisualMode.mode,\n        transition = _useVisualMode.transition,\n        back = _useVisualMode.back;\n\n  const bookInterview = (id, interview) => {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, interview)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    axios.get(\"http://localhost:8001/api/appointments/\".concat(id)).then(setState(_objectSpread({}, state, {\n      appointments\n    })));\n    console.log(id, interview);\n  };\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  }));\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const interviewers = getInterviewersForDay(state, state.day);\n  const schedule = dailyAppointments.map(appointment => {\n    console.log(\"APPOINTMENT\", appointment.interview);\n    const interview = getInterview(state, appointment.interview);\n    return React.createElement(Appointment, {\n      key: appointment.id,\n      id: appointment.id,\n      time: appointment.time,\n      interview: interview,\n      interviewers: interviewers,\n      bookInterview: bookInterview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  });\n  useEffect(() => {\n    const daysURL = \"http://localhost:8001/api/days\";\n    const appointmentsURL = \"http://localhost:8001/api/appointments\";\n    const interviewersURL = \"http://localhost:8001/api/interviewers\";\n    Promise.all([axios.get(daysURL), axios.get(appointmentsURL), axios.get(interviewersURL)]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    days: state.days,\n    day: state.day,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, schedule, React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Application.js"],"names":["React","useEffect","axios","useState","DayList","Appointment","getAppointmentsForDay","getInterview","getInterviewersForDay","useVisualMode","Application","props","day","days","appointments","interviewers","state","setState","mode","transition","back","bookInterview","id","interview","appointment","get","then","console","log","setDay","dailyAppointments","schedule","map","time","daysURL","appointmentsURL","interviewersURL","Promise","all","prev","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport {\n  getAppointmentsForDay,\n  getInterview,\n  getInterviewersForDay,\n} from \"../helpers/selectors\";\nimport useVisualMode from \"hooks/useVisualMode\";\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: {},\n  });\n  const { mode, transition, back } = useVisualMode();\n  const bookInterview = (id, interview) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview },\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n    axios\n      .get(`http://localhost:8001/api/appointments/${id}`)\n      .then(\n        setState({\n          ...state,\n          appointments,\n        })\n      )\n    console.log(id, interview);\n  };\n  const setDay = (day) => setState({ ...state, day });\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const interviewers = getInterviewersForDay(state, state.day);\n  const schedule = dailyAppointments.map((appointment) => {\n    console.log(\"APPOINTMENT\", appointment.interview);\n    const interview = getInterview(state, appointment.interview);\n\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={interview}\n        interviewers={interviewers}\n        bookInterview={bookInterview}\n      />\n    );\n  });\n\n  useEffect(() => {\n    const daysURL = `http://localhost:8001/api/days`;\n    const appointmentsURL = `http://localhost:8001/api/appointments`;\n    const interviewersURL = `http://localhost:8001/api/interviewers`;\n\n    Promise.all([\n      axios.get(daysURL),\n      axios.get(appointmentsURL),\n      axios.get(interviewersURL),\n    ]).then((all) => {\n      setState((prev) => ({\n        ...prev,\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data,\n      }));\n    });\n  }, []);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {schedule}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}