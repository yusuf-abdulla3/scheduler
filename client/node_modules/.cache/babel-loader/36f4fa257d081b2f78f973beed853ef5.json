{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Application.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay } from '../helpers/selectors';\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  }));\n\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const schedule = appointments.map(appointment => {\n    return React.createElement(Appointment, {\n      key: appointment.id,\n      id: appointment.id,\n      time: appointment.time,\n      interview: appointment.interview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  });\n  useEffect(() => {\n    const daysURL = \"http://localhost:8001/api/days\";\n    const appointmentsURL = \"http://localhost:8001/api/appointments\";\n    const interviewersURL = \"http://localhost:8001/api/interviewers\";\n    Promise.all([axios.get(daysURL), axios.get(appointmentsURL), axios.get(interviewersURL)]).then(all => {\n      console.log(all[0]);\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n      console.log(all);\n    });\n  }, []);\n  console.log(state.interviewers);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    days: state.days,\n    day: state.day,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, dailyAppointments.map(appointment => React.createElement(Appointment, Object.assign({\n    key: appointment.id\n  }, appointment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Application.js"],"names":["React","useEffect","axios","useState","DayList","Appointment","getAppointmentsForDay","Application","props","day","days","appointments","interviewers","state","setState","setDay","dailyAppointments","schedule","map","appointment","id","time","interview","daysURL","appointmentsURL","interviewersURL","Promise","all","get","then","console","log","prev","data"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay } from '../helpers/selectors';\n\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [],\n    interviewers: {}\n       \n    \n  });\n  \n  const setDay = (day) => setState({ ...state, day });\n  const dailyAppointments = getAppointmentsForDay(state, state.day);\n  const schedule = appointments.map((appointment) => {\n    return (\n      <Appointment\n        key={appointment.id}\n        id={appointment.id}\n        time={appointment.time}\n        interview={appointment.interview}\n      />\n    );\n  });\n \n  \n\n  useEffect(() => {\n    const daysURL = `http://localhost:8001/api/days`;\n    const appointmentsURL = `http://localhost:8001/api/appointments`;\n    const interviewersURL = `http://localhost:8001/api/interviewers`;\n\n      Promise.all([\n        axios.get(daysURL),\n        axios.get(appointmentsURL),\n        axios.get(interviewersURL),\n      ]).then((all) => {\n       console.log(all[0])\n        setState(prev => ({...prev, days: all[0].data, appointments: all[1].data, interviewers: all[2].data }));\n        console.log(all);\n      })\n     \n    }, []);\n    console.log(state.interviewers)\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {dailyAppointments.map((appointment) => (\n          <Appointment key={appointment.id} {...appointment} />\n        ))}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}