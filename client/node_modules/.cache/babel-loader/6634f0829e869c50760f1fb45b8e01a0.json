{"ast":null,"code":"import _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Appointment/Form.js\";\nimport React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport InterviewerList from \"../InterviewerList\";\n\nconst Form = props => {\n  const _useState = useState(props.name || \"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(props.interviewer || null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        interviewer = _useState4[0],\n        setInterviewer = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  function reset() {\n    setName(\"\");\n    setInterviewer(null);\n  }\n\n  function cancel() {\n    reset();\n    props.onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    if (interviewer === null) {\n      setError(\"Please select an interviewer\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return React.createElement(\"main\", {\n    className: \"appointment__card appointment__card--create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"appointment__card-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: event => event.preventDefault(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"appointment__create-input text--semi-bold\",\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Enter Student Name\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    \"data-testid\": \"student-name-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"section\", {\n    className: \"appointment__validation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, error)), React.createElement(InterviewerList, {\n    interviewers: props.interviewers,\n    value: interviewer,\n    onChange: setInterviewer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"appointment__card-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"appointment__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Button, {\n    danger: true,\n    onClick: cancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    confirm: true,\n    onClick: validate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Appointment/Form.js"],"names":["React","useState","Button","InterviewerList","Form","props","name","setName","interviewer","setInterviewer","error","setError","reset","cancel","onCancel","validate","onSave","event","preventDefault","target","value","interviewers"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;;AAEC,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA,oBACCJ,QAAQ,CAACI,KAAK,CAACC,IAAN,IAAc,EAAf,CADT;AAAA;AAAA,QAChBA,IADgB;AAAA,QACVC,OADU;;AAAA,qBAEeN,QAAQ,CAACI,KAAK,CAACG,WAAN,IAAqB,IAAtB,CAFvB;AAAA;AAAA,QAEhBA,WAFgB;AAAA,QAEHC,cAFG;;AAAA,qBAGGR,QAAQ,CAAC,EAAD,CAHX;AAAA;AAAA,QAGhBS,KAHgB;AAAA,QAGTC,QAHS;;AAKvB,WAASC,KAAT,GAAiB;AACfL,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AACD,WAASI,MAAT,GAAkB;AAChBD,IAAAA,KAAK;AACLP,IAAAA,KAAK,CAACS,QAAN;AACD;;AAED,WAASC,QAAT,GAAoB;AAClB,QAAIT,IAAI,KAAK,EAAb,EAAiB;AACfK,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AACD,QAAIH,WAAW,KAAK,IAApB,EAA0B;AACxBG,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AAEDA,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,IAAAA,KAAK,CAACW,MAAN,CAAaV,IAAb,EAAmBE,WAAnB;AACD;;AAED,SACE;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAGS,KAAD,IAAWA,KAAK,CAACC,cAAN,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,2CADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,KAAK,EAAEZ,IALT;AAME,IAAA,QAAQ,EAAGW,KAAD,IAAWV,OAAO,CAACU,KAAK,CAACE,MAAN,CAAaC,KAAd,CAN9B;AAOE,mBAAY,oBAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CV,KAA9C,CAVF,CADF,EAaE,oBAAC,eAAD;AACE,IAAA,YAAY,EAAEL,KAAK,CAACgB,YADtB;AAEE,IAAA,KAAK,EAAEb,WAFT;AAGE,IAAA,QAAQ,EAAEC,cAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,EAoBE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEI,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEE,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CApBF,CADF;AAiCD,CA7DA;;AA+DD,eAAeX,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../Button\";\nimport InterviewerList from \"../InterviewerList\";\n\n const Form = (props) => {\n  const [name, setName] = useState(props.name || \"\");\n  const [interviewer, setInterviewer] = useState(props.interviewer || null);\n  const [error, setError] = useState(\"\");\n\n  function reset() {\n    setName(\"\");\n    setInterviewer(null);\n  }\n  function cancel() {\n    reset();\n    props.onCancel();\n  }\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n    if (interviewer === null) {\n      setError(\"Please select an interviewer\");\n      return;\n    }\n    \n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return (\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={(event) => event.preventDefault()}>\n          <input\n            className=\"appointment__create-input text--semi-bold\"\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Enter Student Name\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            data-testid=\"student-name-input\"\n          />\n          <section className=\"appointment__validation\">{error}</section>\n        </form>\n        <InterviewerList\n          interviewers={props.interviewers}\n          value={interviewer}\n          onChange={setInterviewer}\n        />\n      </section>\n      <section className=\"appointment__card-right\">\n        <section className=\"appointment__actions\">\n          <Button danger onClick={cancel}>\n            Cancel\n          </Button>\n          <Button confirm onClick={validate}>\n            Save\n          </Button>\n        </section>\n      </section>\n    </main>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}