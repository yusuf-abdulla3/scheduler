{"ast":null,"code":"import _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState } from \"react\";\n\nconst useVisualMode = function (initial) {\n  const _useState = useState(initial),\n        _useState2 = _slicedToArray(_useState, 2),\n        mode = _useState2[0],\n        setMode = _useState2[1];\n\n  const _useState3 = useState([initial]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        history = _useState4[0],\n        setHistory = _useState4[1];\n\n  const transition = (newMode, replace = false) => {\n    setMode(newMode);\n\n    if (replace) {\n      setHistory(prev => [prev[0]]);\n    }\n\n    setHistory(prev => [...prev, newMode]);\n  };\n\n  const back = () => {\n    if (history.length > 1) {\n      history.pop();\n      setMode(history[history.length - 1]);\n    }\n  };\n\n  return {\n    mode,\n    transition,\n    back\n  };\n};\n\nexport default useVisualMode;","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/hooks/useVisualMode.js"],"names":["useState","useVisualMode","initial","mode","setMode","history","setHistory","transition","newMode","replace","prev","back","length","pop"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;AACA,MAAMC,aAAa,GAAG,UAAUC,OAAV,EAAmB;AAAA,oBACfF,QAAQ,CAACE,OAAD,CADO;AAAA;AAAA,QAChCC,IADgC;AAAA,QAC1BC,OAD0B;;AAAA,qBAETJ,QAAQ,CAAC,CAACE,OAAD,CAAD,CAFC;AAAA;AAAA,QAEhCG,OAFgC;AAAA,QAEvBC,UAFuB;;AAIvC,QAAMC,UAAU,GAAG,CAACC,OAAD,EAAUC,OAAO,GAAG,KAApB,KAA8B;AAC/CL,IAAAA,OAAO,CAACI,OAAD,CAAP;;AACA,QAAIC,OAAJ,EAAa;AACXH,MAAAA,UAAU,CAACI,IAAI,IAAI,CAACA,IAAI,CAAC,CAAD,CAAL,CAAT,CAAV;AACD;;AACDJ,IAAAA,UAAU,CAACI,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUF,OAAV,CAAT,CAAV;AACD,GAND;;AAQA,QAAMG,IAAI,GAAG,MAAM;AACjB,QAAIN,OAAO,CAACO,MAAR,GAAiB,CAArB,EAAwB;AACxBP,MAAAA,OAAO,CAACQ,GAAR;AACAT,MAAAA,OAAO,CAACC,OAAO,CAACA,OAAO,CAACO,MAAR,GAAiB,CAAlB,CAAR,CAAP;AACC;AACF,GALD;;AAOA,SAAO;AAAET,IAAAA,IAAF;AAAQI,IAAAA,UAAR;AAAoBI,IAAAA;AAApB,GAAP;AACD,CApBD;;AAsBA,eAAeV,aAAf","sourcesContent":["import { useState } from \"react\";\nconst useVisualMode = function (initial) {\n  const [mode, setMode] = useState(initial);\n  const [history, setHistory] = useState([initial]);\n\n  const transition = (newMode, replace = false) => {\n    setMode(newMode);\n    if (replace) {\n      setHistory(prev => [prev[0]])\n    }\n    setHistory(prev => [...prev, newMode]);\n  };\n\n  const back = () => {\n    if (history.length > 1) {\n    history.pop();\n    setMode(history[history.length - 1]);\n    }\n  };\n\n  return { mode, transition, back };\n};\n\nexport default useVisualMode;\n"]},"metadata":{},"sourceType":"module"}