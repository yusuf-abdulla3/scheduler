{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yusuf/scheduler/src/components/Application.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay } from '../helpers/selectors'; // const appointments = [\n//   {\n//     id: 1,\n//     time: \"12pm\",\n//   },\n//   {\n//     id: 2,\n//     time: \"1pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n//   {\n//     id: 3,\n//     time: \"2pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n//   {\n//     id: 4,\n//     time: \"3pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n//   {\n//     id: 5,\n//     time: \"4pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n// ];\n\nexport default function Application(props) {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: [{\n      id: 1,\n      time: \"12pm\"\n    }, {\n      id: 2,\n      time: \"1pm\",\n      interview: {\n        student: \"Lydia Miller-Jones\",\n        interviewer: {\n          id: 1,\n          name: \"Sylvia Palmer\",\n          avatar: \"https://i.imgur.com/LpaY82x.png\"\n        }\n      }\n    }, {\n      id: 3,\n      time: \"2pm\",\n      interview: {\n        student: \"Lydia Miller-Jones\",\n        interviewer: {\n          id: 1,\n          name: \"Sylvia Palmer\",\n          avatar: \"https://i.imgur.com/LpaY82x.png\"\n        }\n      }\n    }, {\n      id: 4,\n      time: \"3pm\",\n      interview: {\n        student: \"Lydia Miller-Jones\",\n        interviewer: {\n          id: 1,\n          name: \"Sylvia Palmer\",\n          avatar: \"https://i.imgur.com/LpaY82x.png\"\n        }\n      }\n    }, {\n      id: 5,\n      time: \"4pm\",\n      interview: {\n        student: \"Lydia Miller-Jones\",\n        interviewer: {\n          id: 1,\n          name: \"Sylvia Palmer\",\n          avatar: \"https://i.imgur.com/LpaY82x.png\"\n        }\n      }\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  })); // const dailyAppointments = getAppointmentsForDay(state.setDay,state.day);\n\n\n  useEffect(() => {\n    const daysURL = \"http://localhost:8001/api/days\";\n    const appointmentsURL = \"http://localhost:8001/api/appointments\";\n    const interviewersURL = \"http://localhost:8001/api/interviewers\";\n    Promise.all([axios.get(daysURL), axios.get(appointmentsURL), axios.get(interviewersURL)]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0],\n        appointments: all[1],\n        interviewers: all[2]\n      }));\n      console.log(all);\n    });\n  }, []);\n  return React.createElement(\"main\", {\n    className: \"layout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"sidebar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"sidebar--centered\",\n    src: \"images/logo.png\",\n    alt: \"Interview Scheduler\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"sidebar__separator sidebar--centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"nav\", {\n    className: \"sidebar__menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(DayList, {\n    days: state.days,\n    day: state.day,\n    setDay: setDay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"img\", {\n    className: \"sidebar__lhl sidebar--centered\",\n    src: \"images/lhl.png\",\n    alt: \"Lighthouse Labs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    className: \"schedule\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, dailyAppointments.map(appointment => React.createElement(Appointment, Object.assign({\n    key: appointment.id\n  }, appointment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }))), React.createElement(Appointment, {\n    key: \"last\",\n    time: \"5pm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/components/Application.js"],"names":["React","useEffect","axios","useState","DayList","Appointment","getAppointmentsForDay","Application","props","day","days","appointments","id","time","interview","student","interviewer","name","avatar","state","setState","setDay","daysURL","appointmentsURL","interviewersURL","Promise","all","get","then","prev","interviewers","console","log","dailyAppointments","map","appointment"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"components/Application.scss\";\nimport { useState } from \"react\";\nimport DayList from \"./DayList\";\nimport Appointment from \"components/Appointment\";\nimport { getAppointmentsForDay } from '../helpers/selectors';\n\n// const appointments = [\n//   {\n//     id: 1,\n//     time: \"12pm\",\n//   },\n//   {\n//     id: 2,\n//     time: \"1pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n//   {\n//     id: 3,\n//     time: \"2pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n\n//   {\n//     id: 4,\n//     time: \"3pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n//   {\n//     id: 5,\n//     time: \"4pm\",\n//     interview: {\n//       student: \"Lydia Miller-Jones\",\n//       interviewer: {\n//         id: 1,\n//         name: \"Sylvia Palmer\",\n//         avatar: \"https://i.imgur.com/LpaY82x.png\",\n//       },\n//     },\n//   },\n// ];\n\nexport default function Application(props) {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: \n    [\n        {\n          id: 1,\n          time: \"12pm\",\n        },\n        {\n          id: 2,\n          time: \"1pm\",\n          interview: {\n            student: \"Lydia Miller-Jones\",\n            interviewer: {\n              id: 1,\n              name: \"Sylvia Palmer\",\n              avatar: \"https://i.imgur.com/LpaY82x.png\",\n            },\n          },\n        },\n        {\n          id: 3,\n          time: \"2pm\",\n          interview: {\n            student: \"Lydia Miller-Jones\",\n            interviewer: {\n              id: 1,\n              name: \"Sylvia Palmer\",\n              avatar: \"https://i.imgur.com/LpaY82x.png\",\n            },\n          },\n        },\n      \n        {\n          id: 4,\n          time: \"3pm\",\n          interview: {\n            student: \"Lydia Miller-Jones\",\n            interviewer: {\n              id: 1,\n              name: \"Sylvia Palmer\",\n              avatar: \"https://i.imgur.com/LpaY82x.png\",\n            },\n          },\n        },\n        {\n          id: 5,\n          time: \"4pm\",\n          interview: {\n            student: \"Lydia Miller-Jones\",\n            interviewer: {\n              id: 1,\n              name: \"Sylvia Palmer\",\n              avatar: \"https://i.imgur.com/LpaY82x.png\",\n            },\n          },\n        },\n      ]\n    \n  });\n  \n  const setDay = (day) => setState({ ...state, day });\n  // const dailyAppointments = getAppointmentsForDay(state.setDay,state.day);\n \n  \n\n  useEffect(() => {\n    const daysURL = `http://localhost:8001/api/days`;\n    const appointmentsURL = `http://localhost:8001/api/appointments`;\n    const interviewersURL = `http://localhost:8001/api/interviewers`;\n\n      Promise.all([\n        axios.get(daysURL),\n        axios.get(appointmentsURL),\n        axios.get(interviewersURL),\n      ]).then((all) => {\n        setState(prev => ({...prev, days: all[0], appointments: all[1], interviewers: all[2] }));\n        console.log(all);\n      })\n     \n    }, []);\n\n  return (\n    <main className=\"layout\">\n      <section className=\"sidebar\">\n        <img\n          className=\"sidebar--centered\"\n          src=\"images/logo.png\"\n          alt=\"Interview Scheduler\"\n        />\n        <hr className=\"sidebar__separator sidebar--centered\" />\n        <nav className=\"sidebar__menu\">\n          <DayList days={state.days} day={state.day} setDay={setDay} />\n        </nav>\n        <img\n          className=\"sidebar__lhl sidebar--centered\"\n          src=\"images/lhl.png\"\n          alt=\"Lighthouse Labs\"\n        />\n      </section>\n      <section className=\"schedule\">\n        {dailyAppointments.map((appointment) => (\n          <Appointment key={appointment.id} {...appointment} />\n        ))}\n        <Appointment key=\"last\" time=\"5pm\" />\n      </section>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}