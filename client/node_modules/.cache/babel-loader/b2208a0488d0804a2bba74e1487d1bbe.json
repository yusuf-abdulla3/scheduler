{"ast":null,"code":"import _objectSpread from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/yusuf/scheduler/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useApplicationData = initial => {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  }));\n\n  const findDay = id => {\n    for (const day of state.days) {\n      for (const appointment of day.appointments) {\n        if (id === appointment) {\n          return day;\n        }\n      }\n    }\n  };\n\n  const updateSpots = id => {\n    let spots = 0;\n\n    for (const appointment of findDay(id).appointments) {\n      console.log(\"appointment\", state.appointments);\n\n      if (state.appointments[appointment] === null) {\n        spots += 1;\n        console.log(\"SPOTS INCREASED\", spots);\n      }\n    }\n\n    const spotDay = state.days.map(day => {\n      if (day.name === findDay(id).name) {\n        return _objectSpread({}, day, {\n          spots\n        });\n      }\n\n      return day;\n    });\n    return spotDay;\n  };\n\n  const bookInterview = (id, interview) => {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, interview)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    console.log(appointments);\n    return axios.put(\"/api/appointments/\".concat(id), {\n      interview\n    }).then(res => {\n      return res;\n    }).then(setState(_objectSpread({}, state, {\n      appointments: appointments,\n      days: updateSpots(id)\n    })));\n  };\n\n  const cancelInterview = id => {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: null\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    console.log(\"appointments\", appointments);\n    return axios.delete(\"/api/appointments/\".concat(id)).then(setState(_objectSpread({}, state, {\n      appointments: appointments,\n      days: updateSpots(id)\n    })));\n  };\n\n  useEffect(() => {\n    const daysURL = \"/api/days\";\n    const appointmentsURL = \"/api/appointments\";\n    const interviewersURL = \"/api/interviewers\";\n    Promise.all([axios.get(daysURL), axios.get(appointmentsURL), axios.get(interviewersURL)]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    }).catch(error => console.log(\"ERROR: \", error));\n  }, []);\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n};\n\nexport default useApplicationData;","map":{"version":3,"sources":["/Users/yusuf/scheduler/src/hooks/useApplicationData.js"],"names":["React","useState","useEffect","axios","useApplicationData","initial","day","days","appointments","interviewers","state","setState","setDay","findDay","id","appointment","updateSpots","spots","console","log","spotDay","map","name","bookInterview","interview","put","then","res","cancelInterview","delete","daysURL","appointmentsURL","interviewersURL","Promise","all","get","prev","data","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useApplicationData = (initial) => {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {},\n  });\n\n  const setDay = (day) => setState({ ...state, day });\n\n  const findDay = (id) => {\n    for (const day of state.days) {\n      for (const appointment of day.appointments) {\n        if (id === appointment) {\n          return day;\n        }\n      }\n    }\n  };\n  const updateSpots = (id) => {\n    let spots = 0;\n    for (const appointment of findDay(id).appointments) {\n      console.log(\"appointment\", state.appointments)\n      if (state.appointments[appointment] === null) {\n        spots+=1;\n        console.log(\"SPOTS INCREASED\", spots)\n      }\n    }\n\n    const spotDay = state.days.map((day) => {\n      if (day.name === findDay(id).name) {\n        return { ...day, spots };\n      }\n      return day;\n    });\n    return spotDay;\n  };\n\n  const bookInterview = (id, interview) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview },\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n    console.log(appointments);\n    return axios\n      .put(`/api/appointments/${id}`, { interview })\n      .then((res) => {\n        return res;\n      })\n      .then(\n        setState({\n          ...state,\n          appointments: appointments,\n          days: updateSpots(id),\n        })\n      )\n  };\n\n  const cancelInterview = (id) => {\n    const appointment = {\n      ...state.appointments[id],\n      interview: null,\n    };\n\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment,\n    };\n\n    console.log(\"appointments\", appointments);\n\n    return axios\n      .delete(`/api/appointments/${id}`)\n      .then(\n        setState({\n          ...state,\n          appointments: appointments,\n          days: updateSpots(id),\n        })\n      )\n  };\n\n  useEffect(() => {\n    const daysURL = `/api/days`;\n    const appointmentsURL = `/api/appointments`;\n    const interviewersURL = `/api/interviewers`;\n\n    Promise.all([\n      axios.get(daysURL),\n      axios.get(appointmentsURL),\n      axios.get(interviewersURL),\n    ])\n      .then((all) => {\n        setState((prev) => ({\n          ...prev,\n          days: all[0].data,\n          appointments: all[1].data,\n          interviewers: all[2].data,\n        }));\n      })\n      .catch((error) => console.log(\"ERROR: \", error));\n  }, []);\n\n  return { state, setDay, bookInterview, cancelInterview };\n};\nexport default useApplicationData;\n"]},"metadata":{},"sourceType":"module"}